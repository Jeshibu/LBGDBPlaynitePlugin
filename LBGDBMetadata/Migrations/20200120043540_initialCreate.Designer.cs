// <auto-generated />
using System;
using LBGDBMetadata;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LBGDBMetadata.Migrations
{
    [DbContext(typeof(MetaDataContext))]
    [Migration("20200120043540_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("LBGDBMetadata.LaunchBox.Metadata.Game", b =>
                {
                    b.Property<long>("DatabaseID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("CommunityRating")
                        .HasColumnType("TEXT");

                    b.Property<long>("CommunityRatingCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Developer")
                        .HasColumnType("TEXT");

                    b.Property<string>("ESRB")
                        .HasColumnType("TEXT");

                    b.Property<string>("Genres")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NameSearch")
                        .HasColumnType("TEXT");

                    b.Property<string>("Overview")
                        .HasColumnType("TEXT");

                    b.Property<string>("Platform")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlatformSearch")
                        .HasColumnType("TEXT");

                    b.Property<string>("Publisher")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("WikipediaURL")
                        .HasColumnType("TEXT");

                    b.HasKey("DatabaseID");

                    b.HasIndex("PlatformSearch", "NameSearch");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("LBGDBMetadata.LaunchBox.Metadata.GameAlternateName", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlternateName")
                        .HasColumnType("TEXT");

                    b.Property<long>("DatabaseID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameSearch")
                        .HasColumnType("TEXT");

                    b.Property<string>("Region")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("DatabaseID");

                    b.HasIndex("NameSearch");

                    b.ToTable("GameAlternateName");
                });

            modelBuilder.Entity("LBGDBMetadata.LaunchBox.Metadata.GameImage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("DatabaseID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Region")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("DatabaseID");

                    b.ToTable("GameImages");
                });

            modelBuilder.Entity("LBGDBMetadata.LaunchBox.Metadata.GameAlternateName", b =>
                {
                    b.HasOne("LBGDBMetadata.LaunchBox.Metadata.Game", "Game")
                        .WithMany("AlternateNames")
                        .HasForeignKey("DatabaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LBGDBMetadata.LaunchBox.Metadata.GameImage", b =>
                {
                    b.HasOne("LBGDBMetadata.LaunchBox.Metadata.Game", "Game")
                        .WithMany("Images")
                        .HasForeignKey("DatabaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
